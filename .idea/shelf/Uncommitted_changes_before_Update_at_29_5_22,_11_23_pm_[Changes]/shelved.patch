Index: bst.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\" Binary Search Tree ADT.\n    Defines a Binary Search Tree with linked nodes.\n    Each node contains a key and item as well as references to the children.\n\"\"\"\n\nfrom __future__ import annotations\n\n__author__ = 'Brendon Taylor, modified by Alexey Ignatiev and Jackson Goerner'\n__docformat__ = 'reStructuredText'\n\nfrom typing import TypeVar, Generic\nfrom linked_stack import LinkedStack\nfrom node import TreeNode\nimport sys\n\n\n# generic types\nK = TypeVar('K')\nI = TypeVar('I')\nT = TypeVar('T')\n\n\nclass BSTInOrderIterator:\n    \"\"\" In-order iterator for the binary search tree.\n        Performs stack-based BST traversal.\n    \"\"\"\n\n    def __init__(self, root: TreeNode[K, I]) -> None:\n        \"\"\" Iterator initialiser. \"\"\"\n\n        self.stack = LinkedStack()\n        self.current = root\n\n    def __iter__(self) -> BSTInOrderIterator:\n        \"\"\" Standard __iter__() method for initialisers. Returns itself. \"\"\"\n\n        return self\n\n    def __next__(self) -> K:\n        \"\"\" The main body of the iterator.\n            Returns keys of the BST one by one respecting the in-order.\n        \"\"\"\n\n        while self.current:\n            self.stack.push(self.current)\n            self.current = self.current.left\n\n        if self.stack.is_empty():\n            raise StopIteration\n\n        result = self.stack.pop()\n        self.current = result.right\n\n        return result.key\n\n\nclass BinarySearchTree(Generic[K, I]):\n    \"\"\" Basic binary search tree. \"\"\"\n\n    def __init__(self) -> None:\n        \"\"\"\n            Initialises an empty Binary Search Tree\n            :complexity: O(1)\n        \"\"\"\n\n        self.minimum = None\n        self.root = None\n        self.length = 0\n\n        self.left = None\n        self.right = None\n\n    def is_empty(self) -> bool:\n        \"\"\"\n            Checks to see if the bst is empty\n            :complexity: O(1)\n        \"\"\"\n        return self.root is None\n\n    def __len__(self) -> int:\n        \"\"\" Returns the number of nodes in the tree. \"\"\"\n\n        return self.length\n\n    def __contains__(self, key: K) -> bool:\n        \"\"\"\n            Checks to see if the key is in the BST\n            :complexity: see __getitem__(self, key: K) -> (K, I)\n        \"\"\"\n        try:\n            _ = self[key]\n        except KeyError:\n            return False\n        else:\n            return True\n\n    def __iter__(self) -> BSTInOrderIterator:\n        \"\"\" Create an in-order iterator. \"\"\"\n        return BSTInOrderIterator(self.root)\n\n    def __getitem__(self, key: K) -> I:\n        \"\"\"\n            Attempts to get an item in the tree, it uses the Key to attempt to find it\n            :complexity best: O(CompK) finds the item in the root of the tree\n            :complexity worst: O(CompK * D) item is not found, where D is the depth of the tree\n            CompK is the complexity of comparing the keys\n        \"\"\"\n        return self.get_tree_node_by_key(key).item\n\n    def get_tree_node_by_key(self, key: K) -> TreeNode:\n        return self.get_tree_node_by_key_aux(self.root, key)\n\n    def get_tree_node_by_key_aux(self, current: TreeNode, key: K) -> TreeNode:\n        if current is None:  # base case: empty\n            raise KeyError('Key not found: {0}'.format(key))\n        elif key == current.key:  # base case: found\n            return current\n        elif key < current.key:\n            return self.get_tree_node_by_key_aux(current.left, key)\n        else:  # key > current.key\n            return self.get_tree_node_by_key_aux(current.right, key)\n\n    def getitem_aux(self, current: TreeNode, key: K) -> I:\n        if current is None:  # base case: empty\n            raise KeyError('Key not found: {0}'.format(key))\n        elif key == current.key:  # base case: found\n            return current.item\n        elif key < current.key:\n            return self.getitem_aux(current.left, key)\n        else:  # key > current.key\n            return self.getitem_aux(current.right, key)\n\n    def __setitem__(self, key: K, item: I) -> None:\n        self.root = self.insert_aux(self.root, key, item)\n\n    def insert_aux(self, current: TreeNode, key: K, item: I) -> TreeNode:\n        \"\"\"\n            Attempts to insert an item into the tree, it uses the Key to insert it\n            :complexity best: O(CompK) inserts the item at the root.\n            :complexity worst: O(CompK * D) inserting at the bottom of the tree\n            where D is the depth of the tree\n            CompK is the complexity of comparing the keys\n        \"\"\"\n        if current is None:  # base case: at the leaf\n            current = TreeNode(key, item)\n            self.length += 1\n        elif key < current.key:\n            current.left = self.insert_aux(current.left, key, item)\n        elif key > current.key:\n            current.right = self.insert_aux(current.right, key, item)\n        else:  # key == current.key\n            raise ValueError('Inserting duplicate item')\n        return current\n\n    def __delitem__(self, key: K) -> None:\n        self.root = self.delete_aux(self.root, key)\n\n    def delete_aux(self, current: TreeNode, key: K) -> TreeNode:\n        \"\"\"\n            Attempts to delete an item from the tree, it uses the Key to\n            determine the node to delete.\n        \"\"\"\n\n        if current is None:  # key not found\n            raise ValueError('Deleting non-existent item')\n        elif key < current.key:\n            current.left  = self.delete_aux(current.left, key)\n        elif key > current.key:\n            current.right = self.delete_aux(current.right, key)\n        else:  # we found our key => do actual deletion\n            if self.is_leaf(current):\n                self.length -= 1\n                return None\n            elif current.left is None:\n                self.length -= 1\n                return current.right\n            elif current.right is None:\n                self.length -= 1\n                return current.left\n\n            # general case => find a successor\n            succ = self.get_successor(current)\n            current.key  = succ.key\n            current.item = succ.item\n            current.right = self.delete_aux(current.right, succ.key)\n\n        return current\n\n    def get_successor(self, current: TreeNode) -> TreeNode:\n        \"\"\"\n            Get successor of the current node.\n            It should be a child node having the smallest key among all the\n            larger keys.\n        \"\"\"\n        if current.right is not None:\n            return self.get_minimal(current.right)\n        return None\n\n\n    def get_minimal(self, current: TreeNode) -> TreeNode:\n        \"\"\"\n            Get a node having the smallest key in the current sub-tree.\n        \"\"\"\n        while current.left is not None:\n            current = current.left\n        return current\n\n\n    def is_leaf(self, current: TreeNode) -> bool:\n        \"\"\" Simple check whether or not the node is a leaf. \"\"\"\n\n        return current.left is None and current.right is None\n\n    def draw(self, to=sys.stdout):\n        \"\"\" Draw the tree in the terminal. \"\"\"\n\n        # get the nodes of the graph to draw recursively\n        self.draw_aux(self.root, prefix='', final='', to=to)\n\n    def draw_aux(self, current: TreeNode, prefix='', final='', to=sys.stdout) -> K:\n        \"\"\" Draw a node and then its children. \"\"\"\n\n        if current is not None:\n            real_prefix = prefix[:-2] + final\n            print('{0}{1}'.format(real_prefix, str(current.key)), file=to)\n\n            if current.left or current.right:\n                self.draw_aux(current.left,  prefix=prefix + '\\u2551 ', final='\\u255f\\u2500', to=to)\n                self.draw_aux(current.right, prefix=prefix + '  ', final='\\u2559\\u2500', to=to)\n        else:\n            real_prefix = prefix[:-2] + final\n            print('{0}'.format(real_prefix), file=to)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bst.py b/bst.py
--- a/bst.py	(revision 8f742d97f00739927f2105ecf9d3b1eb5288fcb5)
+++ b/bst.py	(date 1653830590965)
@@ -26,19 +26,24 @@
     """
 
     def __init__(self, root: TreeNode[K, I]) -> None:
-        """ Iterator initialiser. """
+        """ Iterator initialiser.
+         :complexity:  O(1)
+         """
 
         self.stack = LinkedStack()
         self.current = root
 
     def __iter__(self) -> BSTInOrderIterator:
-        """ Standard __iter__() method for initialisers. Returns itself. """
+        """ Standard __iter__() method for initialisers. Returns itself.
+        :complexity: O(1)
+         """
 
         return self
 
     def __next__(self) -> K:
         """ The main body of the iterator.
             Returns keys of the BST one by one respecting the in-order.
+            O(N)
         """
 
         while self.current:
@@ -108,9 +113,20 @@
         return self.get_tree_node_by_key(key).item
 
     def get_tree_node_by_key(self, key: K) -> TreeNode:
+        """"
+        See get_tree_node_by_key_aux
+        best-case: O(log(N))
+        worse-case: O(N)
+        """
         return self.get_tree_node_by_key_aux(self.root, key)
 
     def get_tree_node_by_key_aux(self, current: TreeNode, key: K) -> TreeNode:
+        """
+        Search the needed node in the tree by traversing it logically
+        :param current: current node
+        :param key: given key
+        :return:
+        """
         if current is None:  # base case: empty
             raise KeyError('Key not found: {0}'.format(key))
         elif key == current.key:  # base case: found
@@ -131,6 +147,10 @@
             return self.getitem_aux(current.right, key)
 
     def __setitem__(self, key: K, item: I) -> None:
+        """"
+                best-case: O(log(N))
+                worse-case: O(N)
+        """
         self.root = self.insert_aux(self.root, key, item)
 
     def insert_aux(self, current: TreeNode, key: K, item: I) -> TreeNode:
@@ -207,18 +227,25 @@
 
 
     def is_leaf(self, current: TreeNode) -> bool:
-        """ Simple check whether or not the node is a leaf. """
+        """ Simple check whether or not the node is a leaf.
+            O(1)
+         """
 
         return current.left is None and current.right is None
 
     def draw(self, to=sys.stdout):
-        """ Draw the tree in the terminal. """
+        """ Draw the tree in the terminal.
+        :complexity:O(N)
+         """
 
         # get the nodes of the graph to draw recursively
         self.draw_aux(self.root, prefix='', final='', to=to)
 
     def draw_aux(self, current: TreeNode, prefix='', final='', to=sys.stdout) -> K:
-        """ Draw a node and then its children. """
+        """
+        Draw a node and then its children
+        :complexity: O(N)
+        """
 
         if current is not None:
             real_prefix = prefix[:-2] + final
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"c9235d66-4685-4555-8942-3ddc664d8a52\" name=\"Changes\" comment=\"edit set_total_potion_data and add_potions_to_inventory\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/base.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/base.iml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/hash_table.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/hash_table.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/potion.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/potion.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/primes.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/primes.py\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"29B8Jyypd68L2ZlfIXrXhgfNIFm\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <OptionsSetting value=\"false\" id=\"Update\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\n    <property name=\"node.js.detected.package.tslint\" value=\"true\" />\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\n  </component>\n  <component name=\"RunManager\" selected=\"Python tests.Python tests for test_game.TestGame.test_example\">\n    <configuration name=\"Unnamed\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\n      <module name=\"base\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"$USER_HOME$/opt/anaconda3/bin/python\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Python tests for test_avl.TestAVL\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"base\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\n      <option name=\"_new_target\" value=\"&quot;test_avl.TestAVL&quot;\" />\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Python tests for test_avl.TestAVL.test_kth\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"base\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\n      <option name=\"_new_target\" value=\"&quot;test_avl.TestAVL.test_kth&quot;\" />\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Python tests for test_avl.TestAVL.test_run_through\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"base\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\n      <option name=\"_new_target\" value=\"&quot;test_avl.TestAVL.test_run_through&quot;\" />\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Python tests for test_game.TestGame.test_choose_vendors\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"base\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\n      <option name=\"_new_target\" value=\"&quot;test_game.TestGame.test_choose_vendors&quot;\" />\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Python tests for test_game.TestGame.test_example\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"base\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\n      <option name=\"_new_target\" value=\"&quot;test_game.TestGame.test_example&quot;\" />\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\n      <method v=\"2\" />\n    </configuration>\n    <list>\n      <item itemvalue=\"Python.Unnamed\" />\n      <item itemvalue=\"Python tests.Python tests for test_avl.TestAVL\" />\n      <item itemvalue=\"Python tests.Python tests for test_avl.TestAVL.test_kth\" />\n      <item itemvalue=\"Python tests.Python tests for test_avl.TestAVL.test_run_through\" />\n      <item itemvalue=\"Python tests.Python tests for test_game.TestGame.test_choose_vendors\" />\n      <item itemvalue=\"Python tests.Python tests for test_game.TestGame.test_example\" />\n    </list>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Python tests.Python tests for test_game.TestGame.test_example\" />\n        <item itemvalue=\"Python tests.Python tests for test_game.TestGame.test_choose_vendors\" />\n        <item itemvalue=\"Python tests.Python tests for test_avl.TestAVL.test_kth\" />\n        <item itemvalue=\"Python tests.Python tests for test_avl.TestAVL\" />\n        <item itemvalue=\"Python tests.Python tests for test_avl.TestAVL.test_run_through\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"c9235d66-4685-4555-8942-3ddc664d8a52\" name=\"Changes\" comment=\"\" />\n      <created>1652575052156</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1652575052156</updated>\n      <workItem from=\"1652951553434\" duration=\"1749000\" />\n      <workItem from=\"1653527940015\" duration=\"482000\" />\n      <workItem from=\"1653613126225\" duration=\"21961000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Testing\">\n      <created>1652575513599</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1652575513599</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Testing\">\n      <created>1652575540543</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1652575540543</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Testing\">\n      <created>1652688030501</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1652688030502</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Prime Number\">\n      <created>1652691423808</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1652691423808</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"good hash and bad hash\">\n      <created>1652788250484</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1652788250484</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"hash method\">\n      <created>1652798018102</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1652798018102</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"updated code\">\n      <created>1652844521626</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1652844521626</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"updated code\">\n      <created>1652845993286</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1652845993286</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"added left rotation and right rotation to avl.py file.\">\n      <created>1653528367049</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1653528367049</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"kth largest\">\n      <created>1653544424764</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1653544424765</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"finished all avl section\">\n      <created>1653572203187</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1653572203187</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"added analysis\">\n      <created>1653615661338</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1653615661339</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"added analysis\">\n      <created>1653667143430</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1653667143430</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"finished choose_potions_for_vendors, add_potions_to_inventory, set_total_potion_data\">\n      <created>1653709190921</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1653709190921</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"finished choose_potions_for_vendors, add_potions_to_inventory, set_total_potion_data\">\n      <created>1653711960689</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1653711960689</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"finished debugging choose_potions_for_vendors, add_potions_to_inventory, set_total_potion_data\">\n      <created>1653715922325</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1653715922325</updated>\n    </task>\n    <task id=\"LOCAL-00017\" summary=\"finished debugging choose_potions_for_vendors, add_potions_to_inventory, set_total_potion_data\">\n      <created>1653717151962</created>\n      <option name=\"number\" value=\"00017\" />\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1653717151962</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"18\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Testing\" />\n    <MESSAGE value=\"Prime Number\" />\n    <MESSAGE value=\"good hash and bad hash\" />\n    <MESSAGE value=\"hash method\" />\n    <MESSAGE value=\"updated code\" />\n    <MESSAGE value=\"added left rotation and right rotation to avl.py file.\" />\n    <MESSAGE value=\"kth largest\" />\n    <MESSAGE value=\"finished all avl section\" />\n    <MESSAGE value=\"added analysis\" />\n    <MESSAGE value=\"finished choose_potions_for_vendors, add_potions_to_inventory, set_total_potion_data\" />\n    <MESSAGE value=\"finished debugging choose_potions_for_vendors, add_potions_to_inventory, set_total_potion_data\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"finished debugging choose_potions_for_vendors, add_potions_to_inventory, set_total_potion_data\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/game.py</url>\n          <line>97</line>\n          <option name=\"timeStamp\" value=\"21\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 8f742d97f00739927f2105ecf9d3b1eb5288fcb5)
+++ b/.idea/workspace.xml	(date 1653830591086)
@@ -4,13 +4,8 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="c9235d66-4685-4555-8942-3ddc664d8a52" name="Changes" comment="edit set_total_potion_data and add_potions_to_inventory">
-      <change beforePath="$PROJECT_DIR$/.idea/base.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/base.iml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/hash_table.py" beforeDir="false" afterPath="$PROJECT_DIR$/hash_table.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/potion.py" beforeDir="false" afterPath="$PROJECT_DIR$/potion.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/primes.py" beforeDir="false" afterPath="$PROJECT_DIR$/primes.py" afterDir="false" />
+    <list default="true" id="c9235d66-4685-4555-8942-3ddc664d8a52" name="Changes" comment="Adding comments to files">
+      <change beforePath="$PROJECT_DIR$/bst.py" beforeDir="false" afterPath="$PROJECT_DIR$/bst.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -286,7 +281,14 @@
       <option name="project" value="LOCAL" />
       <updated>1653717151962</updated>
     </task>
-    <option name="localTasksCounter" value="18" />
+    <task id="LOCAL-00018" summary="Adding comments to files">
+      <created>1653829727808</created>
+      <option name="number" value="00018" />
+      <option name="presentableId" value="LOCAL-00018" />
+      <option name="project" value="LOCAL" />
+      <updated>1653829727808</updated>
+    </task>
+    <option name="localTasksCounter" value="19" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -315,7 +317,8 @@
     <MESSAGE value="added analysis" />
     <MESSAGE value="finished choose_potions_for_vendors, add_potions_to_inventory, set_total_potion_data" />
     <MESSAGE value="finished debugging choose_potions_for_vendors, add_potions_to_inventory, set_total_potion_data" />
-    <option name="LAST_COMMIT_MESSAGE" value="finished debugging choose_potions_for_vendors, add_potions_to_inventory, set_total_potion_data" />
+    <MESSAGE value="Adding comments to files" />
+    <option name="LAST_COMMIT_MESSAGE" value="Adding comments to files" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
